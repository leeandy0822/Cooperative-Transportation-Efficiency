<!--  for trajectory tracking -->
<launch>

    <arg name="mav_name" default="iris" />

    <group ns="$(arg mav_name)1">
        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
    </group>
    

    <group ns="$(arg mav_name)2">
        <node name="lee_position_controller_node2" pkg="rotors_control" type="lee_position_controller_node2" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
    </group>


    <group ns="system">
        <node name="payload_position_controller_node" pkg="rotors_control" type="payload_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" /> 
        </node>
    </group>

    <node name="geo" pkg="offb" type="geo" output="screen"/>

</launch>
